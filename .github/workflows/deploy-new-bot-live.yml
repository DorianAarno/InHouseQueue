name: Deploy new Bot - Live
on:
  workflow_dispatch:
env:
  REPO_NAME: ${{ github.event.repository.name }}-live
jobs:
  install-requirements:
    runs-on: ubuntu-latest
    steps:
      - name: Installing requirements for ${{ env.REPO_NAME }}
        uses: fifsky/ssh-action@master
        with:
          command: |
            sudo apt-get install git -y
            sudo apt-get install python3-pip -y
            pip install -r /root/${{ env.REPO_NAME }}/requirements.txt
          host: ${{ secrets.HOST }}
          user: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}

  deploy-via-sftp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: SFTPDeploy
        uses: wlixcc/SFTP-Deploy-Action@v1.2.1
        with:
          username: root
          server: ${{ secrets.HOST }}
          port: 22
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          local_path: ./*
          remote_path: /root/${{ env.REPO_NAME }}/
          args: '-o ConnectTimeout=5'

  add-bot-token:
      needs: [ deploy-via-sftp ]
      runs-on: ubuntu-latest
      timeout-minutes: 2
      env:
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
      steps:
        - id: add-bot-token
          uses: fifsky/ssh-action@master
          with:
            command: |
              cd ${{ env.REPO_NAME }}/
              touch .env
              echo ${{ env.BOT_TOKEN }} > .env
              echo $?
            host: ${{ secrets.HOST }}
            user: root
            key: ${{ secrets.SSH_PRIVATE_KEY }}

  create-systemctl-service:
    needs: [add-bot-token, deploy-via-sftp]
    runs-on: ubuntu-latest
    steps:
      - id: creating-systemctl-service
        uses: fifsky/ssh-action@master
        with:
          command: |
            echo "[Unit]
            Description=${{ env.REPO_NAME }} Discord Bot
            After=multi-user.target
            [Service]
            Type=simple
            ExecStart=/usr/bin/python3 /root/${{ env.REPO_NAME }}/main.py
            User=root
            Restart=on-failure
            RestartSec=30
            WorkingDirectory=/root/${{ env.REPO_NAME }}/
            [Install]
            WantedBy=multi-user.target" >> /etc/systemd/system/${{ env.REPO_NAME }}.service
            chmod +x /root/${{ env.REPO_NAME }}/main.py
            sudo systemctl enable ${{ env.REPO_NAME }}.service
            sudo systemctl daemon-reload
            sudo systemctl start ${{ env.REPO_NAME }}.service
          host: ${{ secrets.HOST }}
          user: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}

  create-systemctl-restart:
    needs: [create-systemctl-service, add-bot-token, deploy-via-sftp]
    runs-on: ubuntu-latest
    steps:
      - id: create-systemctl-restart-service
        uses: fifsky/ssh-action@master
        with:
          command: |
            echo "[Unit]
            Description=${{ env.REPO_NAME }} Discord Bot restart
            After=multi-user.target
            [Service]
            Type=oneshot
            ExecStart=/usr/bin/systemctl restart ${{ env.REPO_NAME }}.service
            [Install]
            WantedBy=multi-user.target" >> /etc/systemd/system/${{ env.REPO_NAME }}-watcher.service
            sudo systemctl enable ${{ env.REPO_NAME }}-watcher.service
            sudo systemctl daemon-reload
            sudo systemctl start ${{ env.REPO_NAME }}-watcher.service
          host: ${{ secrets.HOST }}
          user: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}

